{"ast":null,"code":"import _slicedToArray from \"/Users/itmac022/Documents/Sarang/PeerbitsDemo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/itmac022/Documents/Sarang/PeerbitsDemo/src/_metronic/layout/_core/MetronicSplashScreen.js\";\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\nvar MetronicSplashScreenContext = createContext();\nexport function MetronicSplashScreenProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      count = _useState2[0],\n      setCount = _useState2[1];\n\n  var visible = count > 0;\n  useEffect(function () {\n    var splashScreen = document.getElementById(\"splash-screen\"); // Show SplashScreen\n\n    if (splashScreen && visible) {\n      splashScreen.classList.remove(\"hidden\");\n      return function () {\n        splashScreen.classList.add(\"hidden\");\n      };\n    } // Hide SplashScreen\n\n\n    var timeout;\n\n    if (splashScreen && !visible) {\n      timeout = setTimeout(function () {\n        splashScreen.classList.add(\"hidden\");\n      }, 3000);\n    }\n\n    return function () {\n      clearTimeout(timeout);\n    };\n  }, [visible]);\n  return /*#__PURE__*/React.createElement(MetronicSplashScreenContext.Provider, {\n    value: setCount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, children);\n}\nexport function LayoutSplashScreen(_ref2) {\n  var _ref2$visible = _ref2.visible,\n      visible = _ref2$visible === void 0 ? true : _ref2$visible;\n  // Everything are ready - remove splashscreen\n  var setCount = useContext(MetronicSplashScreenContext);\n  useEffect(function () {\n    console.log(\"object\", {\n      visible: visible\n    });\n\n    if (!visible) {\n      return;\n    }\n\n    setCount(function (prev) {\n      return prev + 1;\n    });\n    return function () {\n      setCount(function (prev) {\n        return prev - 1;\n      });\n    };\n  }, [setCount, visible]);\n  return null;\n}","map":{"version":3,"sources":["/Users/itmac022/Documents/Sarang/PeerbitsDemo/src/_metronic/layout/_core/MetronicSplashScreen.js"],"names":["React","createContext","useContext","useState","useEffect","MetronicSplashScreenContext","MetronicSplashScreenProvider","children","count","setCount","visible","splashScreen","document","getElementById","classList","remove","add","timeout","setTimeout","clearTimeout","LayoutSplashScreen","console","log","prev"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,aAAf,EAA8BC,UAA9B,EAA0CC,QAA1C,EAAoDC,SAApD,QAAoE,OAApE;AAEA,IAAMC,2BAA2B,GAAGJ,aAAa,EAAjD;AAEA,OAAO,SAASK,4BAAT,OAAoD;AAAA,MAAZC,QAAY,QAAZA,QAAY;;AACzD,kBAA0BJ,QAAQ,CAAC,CAAD,CAAlC;AAAA;AAAA,MAAOK,KAAP;AAAA,MAAcC,QAAd;;AACA,MAAIC,OAAO,GAAGF,KAAK,GAAG,CAAtB;AAEAJ,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMO,YAAY,GAAGC,QAAQ,CAACC,cAAT,CAAwB,eAAxB,CAArB,CADc,CAGd;;AACA,QAAIF,YAAY,IAAID,OAApB,EAA6B;AAC3BC,MAAAA,YAAY,CAACG,SAAb,CAAuBC,MAAvB,CAA8B,QAA9B;AAEA,aAAO,YAAM;AACXJ,QAAAA,YAAY,CAACG,SAAb,CAAuBE,GAAvB,CAA2B,QAA3B;AACD,OAFD;AAGD,KAVa,CAYd;;;AACA,QAAIC,OAAJ;;AACA,QAAIN,YAAY,IAAI,CAACD,OAArB,EAA8B;AAC5BO,MAAAA,OAAO,GAAGC,UAAU,CAAC,YAAM;AACzBP,QAAAA,YAAY,CAACG,SAAb,CAAuBE,GAAvB,CAA2B,QAA3B;AACD,OAFmB,EAEjB,IAFiB,CAApB;AAGD;;AAED,WAAO,YAAM;AACXG,MAAAA,YAAY,CAACF,OAAD,CAAZ;AACD,KAFD;AAGD,GAvBQ,EAuBN,CAACP,OAAD,CAvBM,CAAT;AAyBA,sBACE,oBAAC,2BAAD,CAA6B,QAA7B;AAAsC,IAAA,KAAK,EAAED,QAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,QADH,CADF;AAKD;AAED,OAAO,SAASa,kBAAT,QAAgD;AAAA,4BAAlBV,OAAkB;AAAA,MAAlBA,OAAkB,8BAAR,IAAQ;AACrD;AACA,MAAMD,QAAQ,GAAGP,UAAU,CAACG,2BAAD,CAA3B;AAEAD,EAAAA,SAAS,CAAC,YAAM;AACdiB,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqB;AAACZ,MAAAA,OAAO,EAAPA;AAAD,KAArB;;AACA,QAAI,CAACA,OAAL,EAAc;AACZ;AACD;;AAEDD,IAAAA,QAAQ,CAAC,UAAAc,IAAI,EAAI;AACf,aAAOA,IAAI,GAAG,CAAd;AACD,KAFO,CAAR;AAIA,WAAO,YAAM;AACXd,MAAAA,QAAQ,CAAC,UAAAc,IAAI,EAAI;AACf,eAAOA,IAAI,GAAG,CAAd;AACD,OAFO,CAAR;AAGD,KAJD;AAKD,GAfQ,EAeN,CAACd,QAAD,EAAWC,OAAX,CAfM,CAAT;AAiBA,SAAO,IAAP;AACD","sourcesContent":["import React, {createContext, useContext, useState, useEffect} from \"react\";\r\n\r\nconst MetronicSplashScreenContext = createContext();\r\n\r\nexport function MetronicSplashScreenProvider({ children }) {\r\n  const [count, setCount] = useState(0);\r\n  let visible = count > 0;\r\n\r\n  useEffect(() => {\r\n    const splashScreen = document.getElementById(\"splash-screen\");\r\n\r\n    // Show SplashScreen\r\n    if (splashScreen && visible) {\r\n      splashScreen.classList.remove(\"hidden\");\r\n\r\n      return () => {\r\n        splashScreen.classList.add(\"hidden\");\r\n      };\r\n    }\r\n\r\n    // Hide SplashScreen\r\n    let timeout;\r\n    if (splashScreen && !visible) {\r\n      timeout = setTimeout(() => {\r\n        splashScreen.classList.add(\"hidden\");\r\n      }, 3000);\r\n    }\r\n\r\n    return () => {\r\n      clearTimeout(timeout);\r\n    };\r\n  }, [visible]);\r\n\r\n  return (\r\n    <MetronicSplashScreenContext.Provider value={setCount}>\r\n      {children}\r\n    </MetronicSplashScreenContext.Provider>\r\n  );\r\n}\r\n\r\nexport function LayoutSplashScreen({ visible = true }) {\r\n  // Everything are ready - remove splashscreen\r\n  const setCount = useContext(MetronicSplashScreenContext);\r\n\r\n  useEffect(() => {\r\n    console.log(\"object\",{visible})\r\n    if (!visible) {\r\n      return;\r\n    }\r\n\r\n    setCount(prev => {\r\n      return prev + 1;\r\n    });\r\n\r\n    return () => {\r\n      setCount(prev => {\r\n        return prev - 1;\r\n      });\r\n    };\r\n  }, [setCount, visible]);\r\n\r\n  return null;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}