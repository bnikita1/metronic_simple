{"ast":null,"code":"import _regeneratorRuntime from \"/Users/itmac022/Documents/Sarang/PeerbitsDemo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/itmac022/Documents/Sarang/PeerbitsDemo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React from 'react';\nimport { USER_REGISTERATION } from '../actionTypes';\nimport axios from 'axios';\nexport var registerUser = function registerUser(payload) {\n  return function (dispatch) {\n    return dispatch(registerUserInit(payload));\n  };\n};\nexport var registerUserInit = function registerUserInit(payload) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var userData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dispatch({\n                type: USER_REGISTERATION.USER_REGISTERATION_INIT\n              });\n              _context.next = 3;\n              return axios.post('http://localhost:9000/api/users', {\n                email: payload.email,\n                fullname: payload.fullname,\n                username: payload.username,\n                password: payload.password\n              });\n\n            case 3:\n              userData = _context.sent;\n              console.log(\"USER Registerd\", userData);\n              dispatch({\n                type: USER_REGISTERATION.USER_REGISTERATION_SUCCESS,\n                payload: {\n                  authToken: userData.data.authToken\n                }\n              }); // return userData;\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["/Users/itmac022/Documents/Sarang/PeerbitsDemo/src/reduxs/actions/auth.js"],"names":["React","USER_REGISTERATION","axios","registerUser","payload","dispatch","registerUserInit","type","USER_REGISTERATION_INIT","post","email","fullname","username","password","userData","console","log","USER_REGISTERATION_SUCCESS","authToken","data"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,kBAAT,QAAmC,gBAAnC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,OAAD;AAAA,SAAa,UAACC,QAAD;AAAA,WAAcA,QAAQ,CAACC,gBAAgB,CAACF,OAAD,CAAjB,CAAtB;AAAA,GAAb;AAAA,CAArB;AAEP,OAAO,IAAME,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACF,OAAD;AAAA;AAAA,wEAAc,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAC1CA,cAAAA,QAAQ,CAAC;AACLE,gBAAAA,IAAI,EAAEN,kBAAkB,CAACO;AADpB,eAAD,CAAR;AAD0C;AAAA,qBAKnBN,KAAK,CAACO,IAAN,CAAW,iCAAX,EAA8C;AAAEC,gBAAAA,KAAK,EAAEN,OAAO,CAACM,KAAjB;AAAwBC,gBAAAA,QAAQ,EAAEP,OAAO,CAACO,QAA1C;AAAoDC,gBAAAA,QAAQ,EAAER,OAAO,CAACQ,QAAtE;AAAgFC,gBAAAA,QAAQ,EAAET,OAAO,CAACS;AAAlG,eAA9C,CALmB;;AAAA;AAKpCC,cAAAA,QALoC;AAM1CC,cAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,QAA9B;AACAT,cAAAA,QAAQ,CAAC;AACLE,gBAAAA,IAAI,EAAEN,kBAAkB,CAACgB,0BADpB;AAELb,gBAAAA,OAAO,EAAE;AAAEc,kBAAAA,SAAS,EAAEJ,QAAQ,CAACK,IAAT,CAAcD;AAA3B;AAFJ,eAAD,CAAR,CAP0C,CAW1C;;AAX0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAd;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAzB","sourcesContent":["import React from 'react'\nimport { USER_REGISTERATION } from '../actionTypes';\nimport axios from 'axios';\n\nexport const registerUser = (payload) => (dispatch) => dispatch(registerUserInit(payload));\n\nexport const registerUserInit = (payload)  => async (dispatch) => {\n    dispatch({\n        type: USER_REGISTERATION.USER_REGISTERATION_INIT\n    });\n\n    const userData = await axios.post('http://localhost:9000/api/users', { email: payload.email, fullname: payload.fullname, username: payload.username, password: payload.password });\n    console.log(\"USER Registerd\", userData);\n    dispatch({\n        type: USER_REGISTERATION.USER_REGISTERATION_SUCCESS,\n        payload: { authToken: userData.data.authToken }\n    });\n    // return userData;\n\n}\n"]},"metadata":{},"sourceType":"module"}