{"ast":null,"code":"import _regeneratorRuntime from \"/Users/itmac022/Documents/Sarang/PeerbitsDemo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/Users/itmac022/Documents/Sarang/PeerbitsDemo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(saga);\n\nimport { persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport { put, takeLatest } from \"redux-saga/effects\";\nimport { getUserByToken } from \"./authCrud\";\nexport var actionTypes = {\n  Login: \"[Login] Action\",\n  Logout: \"[Logout] Action\",\n  Register: \"[Register] Action\",\n  UserRequested: \"[Request User] Action\",\n  UserLoaded: \"[Load User] Auth API\",\n  SetUser: \"[Set User] Action\"\n};\nvar initialAuthState = {\n  user: undefined,\n  authToken: undefined\n};\nexport var reducer = persistReducer({\n  storage: storage,\n  key: \"v726-demo1-auth\",\n  whitelist: [\"authToken\"]\n}, function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialAuthState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log({\n    action: action,\n    state: state\n  });\n\n  switch (action.type) {\n    case actionTypes.Login:\n      {\n        var authToken = action.payload.authToken;\n        return {\n          authToken: authToken,\n          user: undefined\n        };\n      }\n\n    case actionTypes.Register:\n      {\n        console.log(\"User Register in Store\", action);\n        var _authToken = action.payload.authToken;\n        return {\n          authToken: _authToken,\n          user: undefined\n        };\n      }\n\n    case actionTypes.Logout:\n      {\n        // TODO: Change this code. Actions in reducer aren't allowed.\n        return initialAuthState;\n      }\n\n    case actionTypes.UserLoaded:\n      {\n        var user = action.payload.user;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          user: user\n        });\n      }\n\n    case actionTypes.SetUser:\n      {\n        var _user = action.payload.user;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          user: _user\n        });\n      }\n\n    default:\n      return state;\n  }\n});\nexport var actions = {\n  login: function login(authToken) {\n    return {\n      type: actionTypes.Login,\n      payload: {\n        authToken: authToken\n      }\n    };\n  },\n  register: function register(authToken) {\n    return {\n      type: actionTypes.Register,\n      payload: {\n        authToken: authToken\n      }\n    };\n  },\n  logout: function logout() {\n    return {\n      type: actionTypes.Logout\n    };\n  },\n  requestUser: function requestUser(user) {\n    return {\n      type: actionTypes.UserRequested,\n      payload: {\n        user: user\n      }\n    };\n  },\n  fulfillUser: function fulfillUser(user) {\n    return {\n      type: actionTypes.UserLoaded,\n      payload: {\n        user: user\n      }\n    };\n  },\n  setUser: function setUser(user) {\n    return {\n      type: actionTypes.SetUser,\n      payload: {\n        user: user\n      }\n    };\n  }\n};\nexport function saga() {\n  return _regeneratorRuntime.wrap(function saga$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeLatest(actionTypes.Login, /*#__PURE__*/_regeneratorRuntime.mark(function loginSaga() {\n            return _regeneratorRuntime.wrap(function loginSaga$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.next = 2;\n                    return put(actions.requestUser());\n\n                  case 2:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, loginSaga);\n          }));\n\n        case 2:\n          _context4.next = 4;\n          return takeLatest(actionTypes.Register, /*#__PURE__*/_regeneratorRuntime.mark(function registerSaga() {\n            return _regeneratorRuntime.wrap(function registerSaga$(_context2) {\n              while (1) {\n                switch (_context2.prev = _context2.next) {\n                  case 0:\n                    _context2.next = 2;\n                    return put(actions.requestUser());\n\n                  case 2:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }\n            }, registerSaga);\n          }));\n\n        case 4:\n          _context4.next = 6;\n          return takeLatest(actionTypes.UserRequested, /*#__PURE__*/_regeneratorRuntime.mark(function userRequested() {\n            var _yield$getUserByToken, user;\n\n            return _regeneratorRuntime.wrap(function userRequested$(_context3) {\n              while (1) {\n                switch (_context3.prev = _context3.next) {\n                  case 0:\n                    _context3.prev = 0;\n                    _context3.next = 3;\n                    return getUserByToken();\n\n                  case 3:\n                    _yield$getUserByToken = _context3.sent;\n                    user = _yield$getUserByToken.data;\n                    console.log(\"Error hrerere\", user);\n                    _context3.next = 8;\n                    return put(actions.fulfillUser(user));\n\n                  case 8:\n                    _context3.next = 13;\n                    break;\n\n                  case 10:\n                    _context3.prev = 10;\n                    _context3.t0 = _context3[\"catch\"](0);\n                    console.log(\"Errrpr\", _context3.t0);\n\n                  case 13:\n                  case \"end\":\n                    return _context3.stop();\n                }\n              }\n            }, userRequested, null, [[0, 10]]);\n          }));\n\n        case 6:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked);\n}","map":{"version":3,"sources":["/Users/itmac022/Documents/Sarang/PeerbitsDemo/src/app/modules/Auth/_redux/authRedux.js"],"names":["saga","persistReducer","storage","put","takeLatest","getUserByToken","actionTypes","Login","Logout","Register","UserRequested","UserLoaded","SetUser","initialAuthState","user","undefined","authToken","reducer","key","whitelist","state","action","console","log","type","payload","actions","login","register","logout","requestUser","fulfillUser","setUser","loginSaga","registerSaga","userRequested","data"],"mappings":"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","sourcesContent":["import { persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport { put, takeLatest } from \"redux-saga/effects\";\r\nimport { getUserByToken } from \"./authCrud\";\r\n\r\nexport const actionTypes = {\r\n  Login: \"[Login] Action\",\r\n  Logout: \"[Logout] Action\",\r\n  Register: \"[Register] Action\",\r\n  UserRequested: \"[Request User] Action\",\r\n  UserLoaded: \"[Load User] Auth API\",\r\n  SetUser: \"[Set User] Action\",\r\n};\r\n\r\nconst initialAuthState = {\r\n  user: undefined,\r\n  authToken: undefined,\r\n};\r\n\r\nexport const reducer = persistReducer(\r\n  { storage, key: \"v726-demo1-auth\", whitelist: [\"authToken\"] },\r\n  (state = initialAuthState, action) => {\r\n    console.log({action, state});\r\n    switch (action.type) {\r\n      case actionTypes.Login: {\r\n        const { authToken } = action.payload;\r\n        \r\n        return { authToken, user: undefined };\r\n      }\r\n\r\n      case actionTypes.Register: {\r\n        console.log(\"User Register in Store\",action);\r\n        const { authToken } = action.payload;\r\n\r\n        return { authToken, user: undefined };\r\n      }\r\n\r\n      case actionTypes.Logout: {\r\n        // TODO: Change this code. Actions in reducer aren't allowed.\r\n        return initialAuthState;\r\n      }\r\n\r\n      case actionTypes.UserLoaded: {\r\n        const { user } = action.payload;\r\n        return { ...state, user };\r\n      }\r\n\r\n      case actionTypes.SetUser: {\r\n        const { user } = action.payload;\r\n        return { ...state, user };\r\n      }\r\n\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n);\r\n\r\nexport const actions = {\r\n  login: (authToken) => ({ type: actionTypes.Login, payload: { authToken } }),\r\n  register: (authToken) => ({\r\n    type: actionTypes.Register,\r\n    payload: { authToken },\r\n  }),\r\n  logout: () => ({ type: actionTypes.Logout }),\r\n  requestUser: (user) => ({\r\n    type: actionTypes.UserRequested,\r\n    payload: { user },\r\n  }),\r\n  fulfillUser: (user) => ({ type: actionTypes.UserLoaded, payload: { user } }),\r\n  setUser: (user) => ({ type: actionTypes.SetUser, payload: { user } }),\r\n};\r\n\r\nexport function* saga() {\r\n  yield takeLatest(actionTypes.Login, function* loginSaga() {\r\n    yield put(actions.requestUser());\r\n  });\r\n\r\n  yield takeLatest(actionTypes.Register, function* registerSaga() {\r\n    yield put(actions.requestUser());\r\n  });\r\n\r\n  yield takeLatest(actionTypes.UserRequested, function* userRequested() {\r\n    try {\r\n      const { data: user } = yield getUserByToken();\r\n      console.log(\"Error hrerere\", user);\r\n      yield put(actions.fulfillUser(user));\r\n    }\r\n    catch (error)\r\n    {\r\n      console.log(\"Errrpr\", error);\r\n    }\r\n\r\n    });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}