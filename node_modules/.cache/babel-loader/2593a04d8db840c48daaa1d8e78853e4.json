{"ast":null,"code":"import _regeneratorRuntime from \"/Users/itmac022/Documents/Sarang/PeerbitsDemo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/itmac022/Documents/Sarang/PeerbitsDemo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React from 'react';\nimport { USER_LOGIN, USER_REGISTERATION, GET_CATEGORY, ADD_CATEGORY, UPDATE_CATEGORY, DELETE_CATEGORY } from '../actionTypes';\nimport axios from 'axios';\nexport var registerUser = function registerUser(payload) {\n  return function (dispatch) {\n    return dispatch(registerUserInit(payload));\n  };\n};\nexport var registerUserInit = function registerUserInit(payload) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dispatch({\n                type: USER_REGISTERATION.USER_REGISTERATION_INIT\n              });\n              console.log(\"PAYLOAD\", payload);\n              axios.post('http://localhost:9000/api/users', {\n                email: payload.email,\n                fullname: payload.fullname,\n                username: payload.username,\n                password: payload.password\n              }).then(function (res, err) {\n                if (err) {\n                  dispatch(registerUserError(err));\n                }\n\n                console.log(\"USER Registerd\", {\n                  res: res,\n                  err: err\n                });\n                dispatch(registerUserSuccess(res));\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var registerUserSuccess = function registerUserSuccess(userData) {\n  return function (dispatch) {\n    console.log(\"RESPONSE in DISPATCHS  \", userData.data);\n    dispatch({\n      type: USER_REGISTERATION.USER_REGISTERATION_SUCCESS,\n      payload: {\n        user: userData.data\n      }\n    });\n  };\n};\nexport var registerUserError = function registerUserError(err) {\n  return function (dispatch) {\n    dispatch({\n      type: USER_REGISTERATION.USER_REGISTERATION_ERROR,\n      payload: {\n        err: err\n      }\n    });\n  };\n};\nexport var loginUser = function loginUser(payload) {\n  return function (dispatch) {\n    return dispatch(loginUserInit(payload));\n  };\n};\nexport var loginUserInit = function loginUserInit(payload) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              dispatch({\n                type: USER_LOGIN.USER_LOGIN_INIT\n              });\n              console.log(\"PAYLOAD LOGIN\", payload); //  axios.post('http://localhost:9000/api/users', { email: payload.email, fullname: payload.fullname, username: payload.username, password: payload.password }).then((res,err) => {\n\n              return _context2.abrupt(\"return\", axios.post('http://localhost:9000/api/users/login', {\n                email: payload.email,\n                password: payload.password\n              }).then(function (res, err) {\n                if (err) {\n                  dispatch(loginUserError(err));\n                }\n\n                console.log(\"USER LOGIN\", {\n                  res: res,\n                  err: err\n                });\n                dispatch(loginUserSuccess(res));\n              }));\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\nexport var loginUserSuccess = function loginUserSuccess(userData) {\n  return function (dispatch) {\n    console.log(\"RESPONSE in DISPATCHS  \", userData.data);\n    dispatch({\n      type: USER_LOGIN.USER_LOGIN_SUCCESS,\n      payload: {\n        user: userData.data\n      }\n    });\n  };\n};\nexport var loginUserError = function loginUserError(err) {\n  return function (dispatch) {\n    dispatch({\n      type: USER_LOGIN.USER_LOGIN_ERROR,\n      payload: {\n        err: err\n      }\n    });\n  };\n};\nexport var getCategories = function getCategories() {\n  return function (dispatch) {\n    return dispatch(getCategoriesInit());\n  };\n};\nexport var getCategoriesInit = function getCategoriesInit() {\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              dispatch({\n                type: GET_CATEGORY.GET_CATEGORY_INIT\n              });\n              console.log(\"PAYLOAD  ISIPAIp\"); //  axios.post('http://localhost:9000/api/users', { email: payload.email, fullname: payload.fullname, username: payload.username, password: payload.password }).then((res,err) => {\n\n              return _context3.abrupt(\"return\", axios.get('https://fakestoreapi.com/products').then(function (res, err) {\n                if (err) {\n                  dispatch(getCategoriesError(err));\n                }\n\n                console.log(\"USER LOGIN\", {\n                  res: res,\n                  err: err\n                });\n                dispatch(getCategoriesSuccess(res));\n              }));\n\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function (_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};\nexport var getCategoriesSuccess = function getCategoriesSuccess(userData) {\n  return function (dispatch) {\n    console.log(\"RESPONSE in DISPATCHS  \", userData.data);\n    dispatch({\n      type: GET_CATEGORY.GET_CATEGORY_SUCCESS,\n      payload: {\n        categories: userData.data\n      }\n    });\n  };\n};\nexport var getCategoriesError = function getCategoriesError(err) {\n  return function (dispatch) {\n    dispatch({\n      type: GET_CATEGORY.GET_CATEGORY_ERROR,\n      payload: {\n        err: err\n      }\n    });\n  };\n};\nexport var addCategories = function addCategories(payload) {\n  return function (dispatch) {\n    return dispatch(addCategoriesInit(payload));\n  };\n};\nexport var addCategoriesInit = function addCategoriesInit(payload) {\n  return /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              dispatch({\n                type: ADD_CATEGORY.ADD_CATEGORY_INIT\n              });\n              console.log(\"PAYLOAD  ISIPAIp\"); //  axios.post('http://localhost:9000/api/users', { email: payload.email, fullname: payload.fullname, username: payload.username, password: payload.password }).then((res,err) => {\n              // return axios.get('https://fakestoreapi.com/products').then((res,err)=>{\n              //     if (err)\n              //     {\n              //         dispatch(addCategoriesError(err));\n              //     }\n              //     console.log(\"USER LOGIN\", { res, err });\n              // });\n\n              dispatch(addCategoriesSuccess(payload));\n\n            case 3:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function (_x4) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n};\nexport var addCategoriesSuccess = function addCategoriesSuccess(payload) {\n  return function (dispatch) {\n    console.log(\"addCategoriesSuccess in DISPATCHS  \", payload);\n    dispatch({\n      type: ADD_CATEGORY.ADD_CATEGORY_SUCCESS,\n      payload: payload\n    });\n  };\n};\nexport var addCategoriesError = function addCategoriesError(err) {\n  return function (dispatch) {\n    dispatch({\n      type: ADD_CATEGORY.ADD_CATEGORY_ERROR,\n      payload: {\n        err: err\n      }\n    });\n  };\n};\nexport var updateCategories = function updateCategories(payload) {\n  return function (dispatch) {\n    return dispatch(updateCategoriesInit());\n  };\n};\nexport var updateCategoriesInit = function updateCategoriesInit(payload) {\n  return /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              dispatch({\n                type: UPDATE_CATEGORY.UPDATE_CATEGORY_INIT\n              });\n              console.log(\"PAYLOAD  ISIPAIp\"); //  axios.post('http://localhost:9000/api/users', { email: payload.email, fullname: payload.fullname, username: payload.username, password: payload.password }).then((res,err) => {\n\n              return _context5.abrupt(\"return\", axios.get('https://fakestoreapi.com/products').then(function (res, err) {\n                if (err) {\n                  dispatch(updateCategoriesError(err));\n                }\n\n                console.log(\"USER LOGIN\", {\n                  res: res,\n                  err: err\n                });\n                dispatch(updateCategoriesSuccess(res));\n              }));\n\n            case 3:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function (_x5) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n};\nexport var updateCategoriesSuccess = function updateCategoriesSuccess(userData) {\n  return function (dispatch) {\n    console.log(\"RESPONSE in DISPATCHS  \", userData.data);\n    dispatch({\n      type: UPDATE_CATEGORY.UPDATE_CATEGORY_SUCCESS,\n      payload: {\n        categories: userData.data\n      }\n    });\n  };\n};\nexport var updateCategoriesError = function updateCategoriesError(err) {\n  return function (dispatch) {\n    dispatch({\n      type: UPDATE_CATEGORY.UPDATE_CATEGORY_ERROR,\n      payload: {\n        err: err\n      }\n    });\n  };\n};\nexport var deleteCategories = function deleteCategories() {\n  return function (dispatch) {\n    return dispatch(deleteCategoriesInit());\n  };\n};\nexport var deleteCategoriesInit = function deleteCategoriesInit() {\n  return /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              dispatch({\n                type: DELETE_CATEGORY.DELETE_CATEGORY_INIT\n              });\n              console.log(\"PAYLOAD  ISIPAIp\"); //  axios.post('http://localhost:9000/api/users', { email: payload.email, fullname: payload.fullname, username: payload.username, password: payload.password }).then((res,err) => {\n\n              return _context6.abrupt(\"return\", axios.get('https://fakestoreapi.com/products').then(function (res, err) {\n                if (err) {\n                  dispatch(deleteCategoriesError(err));\n                }\n\n                console.log(\"USER LOGIN\", {\n                  res: res,\n                  err: err\n                });\n                dispatch(deleteCategoriesSuccess(res));\n              }));\n\n            case 3:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function (_x6) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n};\nexport var deleteCategoriesSuccess = function deleteCategoriesSuccess(userData) {\n  return function (dispatch) {\n    console.log(\"RESPONSE in DISPATCHS  \", userData.data);\n    dispatch({\n      type: DELETE_CATEGORY.DELETE_CATEGORY_SUCCESS,\n      payload: {\n        categories: userData.data\n      }\n    });\n  };\n};\nexport var deleteCategoriesError = function deleteCategoriesError(err) {\n  return function (dispatch) {\n    dispatch({\n      type: DELETE_CATEGORY.DELETE_CATEGORY_ERROR,\n      payload: {\n        err: err\n      }\n    });\n  };\n};","map":{"version":3,"sources":["/Users/itmac022/Documents/Sarang/PeerbitsDemo/src/reduxs/actions/auth.js"],"names":["React","USER_LOGIN","USER_REGISTERATION","GET_CATEGORY","ADD_CATEGORY","UPDATE_CATEGORY","DELETE_CATEGORY","axios","registerUser","payload","dispatch","registerUserInit","type","USER_REGISTERATION_INIT","console","log","post","email","fullname","username","password","then","res","err","registerUserError","registerUserSuccess","userData","data","USER_REGISTERATION_SUCCESS","user","USER_REGISTERATION_ERROR","loginUser","loginUserInit","USER_LOGIN_INIT","loginUserError","loginUserSuccess","USER_LOGIN_SUCCESS","USER_LOGIN_ERROR","getCategories","getCategoriesInit","GET_CATEGORY_INIT","get","getCategoriesError","getCategoriesSuccess","GET_CATEGORY_SUCCESS","categories","GET_CATEGORY_ERROR","addCategories","addCategoriesInit","ADD_CATEGORY_INIT","addCategoriesSuccess","ADD_CATEGORY_SUCCESS","addCategoriesError","ADD_CATEGORY_ERROR","updateCategories","updateCategoriesInit","UPDATE_CATEGORY_INIT","updateCategoriesError","updateCategoriesSuccess","UPDATE_CATEGORY_SUCCESS","UPDATE_CATEGORY_ERROR","deleteCategories","deleteCategoriesInit","DELETE_CATEGORY_INIT","deleteCategoriesError","deleteCategoriesSuccess","DELETE_CATEGORY_SUCCESS","DELETE_CATEGORY_ERROR"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { USER_LOGIN, USER_REGISTERATION,GET_CATEGORY, ADD_CATEGORY,UPDATE_CATEGORY,DELETE_CATEGORY } from '../actionTypes';\nimport axios from 'axios';\n\nexport const registerUser = (payload) => (dispatch) => dispatch(registerUserInit(payload));\n\nexport const registerUserInit = (payload)  => async (dispatch) => {\n    dispatch({\n        type: USER_REGISTERATION.USER_REGISTERATION_INIT\n    });\n    console.log(\"PAYLOAD\", payload);\n     axios.post('http://localhost:9000/api/users', { email: payload.email, fullname: payload.fullname, username: payload.username, password: payload.password }).then((res,err) => {\n        if (err)\n        {\n            dispatch(registerUserError(err));\n        }\n        console.log(\"USER Registerd\", { res, err });\n        dispatch(registerUserSuccess(res));\n    });\n}\n\n\nexport const registerUserSuccess = (userData) => (dispatch) => {\n    console.log(\"RESPONSE in DISPATCHS  \", userData.data);\n    dispatch({\n        type: USER_REGISTERATION.USER_REGISTERATION_SUCCESS,\n        payload: { user: userData.data }\n    });\n}\n\nexport const registerUserError = (err) => (dispatch) => {\n    dispatch({\n        type: USER_REGISTERATION.USER_REGISTERATION_ERROR,\n        payload: { err: err }\n    });\n\n}\n\n\nexport const loginUser = (payload) => (dispatch) => dispatch(loginUserInit(payload));\n\nexport const loginUserInit = (payload)  => async (dispatch) => {\n    dispatch({\n        type: USER_LOGIN.USER_LOGIN_INIT\n    });\n    console.log(\"PAYLOAD LOGIN\", payload);\n    //  axios.post('http://localhost:9000/api/users', { email: payload.email, fullname: payload.fullname, username: payload.username, password: payload.password }).then((res,err) => {\n    return axios.post('http://localhost:9000/api/users/login' , { email:payload.email, password:payload.password }).then((res,err)=>{\n        if (err)\n        {\n            dispatch(loginUserError(err));\n        }\n        console.log(\"USER LOGIN\", { res, err });\n        dispatch(loginUserSuccess(res));\n    });\n}\n\n\nexport const loginUserSuccess = (userData) => (dispatch) => {\n    console.log(\"RESPONSE in DISPATCHS  \", userData.data);\n    dispatch({\n        type: USER_LOGIN.USER_LOGIN_SUCCESS,\n        payload: { user: userData.data }\n    });\n}\n\nexport const loginUserError = (err) => (dispatch) => {\n    dispatch({\n        type: USER_LOGIN.USER_LOGIN_ERROR,\n        payload: { err: err }\n    });\n\n}\n\n\n\nexport const getCategories = () => (dispatch) => dispatch(getCategoriesInit());\n\nexport const getCategoriesInit = ()  => async (dispatch) => {\n    dispatch({\n        type: GET_CATEGORY.GET_CATEGORY_INIT\n    });\n    console.log(\"PAYLOAD  ISIPAIp\");\n    //  axios.post('http://localhost:9000/api/users', { email: payload.email, fullname: payload.fullname, username: payload.username, password: payload.password }).then((res,err) => {\n    return axios.get('https://fakestoreapi.com/products').then((res,err)=>{\n        if (err)\n        {\n            dispatch(getCategoriesError(err));\n        }\n        console.log(\"USER LOGIN\", { res, err });\n        dispatch(getCategoriesSuccess(res));\n    });\n}\n\n\nexport const getCategoriesSuccess = (userData) => (dispatch) => {\n    console.log(\"RESPONSE in DISPATCHS  \", userData.data);\n    dispatch({\n        type: GET_CATEGORY.GET_CATEGORY_SUCCESS,\n        payload: { categories: userData.data }\n    });\n}\n\nexport const getCategoriesError = (err) => (dispatch) => {\n    dispatch({\n        type: GET_CATEGORY.GET_CATEGORY_ERROR,\n        payload: { err: err }\n    });\n\n}\n\n\n\nexport const addCategories = (payload) => (dispatch) => dispatch(addCategoriesInit(payload));\n\nexport const addCategoriesInit = (payload)  => async (dispatch) => {\n    dispatch({\n        type: ADD_CATEGORY.ADD_CATEGORY_INIT\n    });\n    console.log(\"PAYLOAD  ISIPAIp\");\n    //  axios.post('http://localhost:9000/api/users', { email: payload.email, fullname: payload.fullname, username: payload.username, password: payload.password }).then((res,err) => {\n    // return axios.get('https://fakestoreapi.com/products').then((res,err)=>{\n    //     if (err)\n    //     {\n    //         dispatch(addCategoriesError(err));\n    //     }\n    //     console.log(\"USER LOGIN\", { res, err });\n// });\n    dispatch(addCategoriesSuccess(payload));\n}\n\nexport const addCategoriesSuccess = (payload) => (dispatch) => {\n    console.log(\"addCategoriesSuccess in DISPATCHS  \", payload);\n    dispatch({\n        type: ADD_CATEGORY.ADD_CATEGORY_SUCCESS,\n        payload: payload\n    });\n}\n\nexport const addCategoriesError = (err) => (dispatch) => {\n    dispatch({\n        type: ADD_CATEGORY.ADD_CATEGORY_ERROR,\n        payload: { err: err }\n    });\n\n}\n\n\n\nexport const updateCategories = (payload) => (dispatch) => dispatch(updateCategoriesInit());\n\nexport const updateCategoriesInit = (payload)  => async (dispatch) => {\n    dispatch({\n        type: UPDATE_CATEGORY.UPDATE_CATEGORY_INIT\n    });\n    console.log(\"PAYLOAD  ISIPAIp\");\n    //  axios.post('http://localhost:9000/api/users', { email: payload.email, fullname: payload.fullname, username: payload.username, password: payload.password }).then((res,err) => {\n    return axios.get('https://fakestoreapi.com/products').then((res,err)=>{\n        if (err)\n        {\n            dispatch(updateCategoriesError(err));\n        }\n        console.log(\"USER LOGIN\", { res, err });\n        dispatch(updateCategoriesSuccess(res));\n    });\n}\n\n\nexport const updateCategoriesSuccess = (userData) => (dispatch) => {\n    console.log(\"RESPONSE in DISPATCHS  \", userData.data);\n    dispatch({\n        type: UPDATE_CATEGORY.UPDATE_CATEGORY_SUCCESS,\n        payload: { categories: userData.data }\n    });\n}\n\nexport const updateCategoriesError = (err) => (dispatch) => {\n    dispatch({\n        type: UPDATE_CATEGORY.UPDATE_CATEGORY_ERROR,\n        payload: { err: err }\n    });\n\n}\n\n\n\nexport const deleteCategories = () => (dispatch) => dispatch(deleteCategoriesInit());\n\nexport const deleteCategoriesInit = ()  => async (dispatch) => {\n    dispatch({\n        type: DELETE_CATEGORY.DELETE_CATEGORY_INIT\n    });\n    console.log(\"PAYLOAD  ISIPAIp\");\n    //  axios.post('http://localhost:9000/api/users', { email: payload.email, fullname: payload.fullname, username: payload.username, password: payload.password }).then((res,err) => {\n    return axios.get('https://fakestoreapi.com/products').then((res,err)=>{\n        if (err)\n        {\n            dispatch(deleteCategoriesError(err));\n        }\n        console.log(\"USER LOGIN\", { res, err });\n        dispatch(deleteCategoriesSuccess(res));\n    });\n}\n\n\nexport const deleteCategoriesSuccess = (userData) => (dispatch) => {\n    console.log(\"RESPONSE in DISPATCHS  \", userData.data);\n    dispatch({\n        type: DELETE_CATEGORY.DELETE_CATEGORY_SUCCESS,\n        payload: { categories: userData.data }\n    });\n}\n\nexport const deleteCategoriesError = (err) => (dispatch) => {\n    dispatch({\n        type: DELETE_CATEGORY.DELETE_CATEGORY_ERROR,\n        payload: { err: err }\n    });\n\n}"]},"metadata":{},"sourceType":"module"}