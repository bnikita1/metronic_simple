{"ast":null,"code":"import axios from \"axios\";\nexport var PRODUCTS_URL = \"api/products\"; // CREATE =>  POST: add a new product to the server\n\nexport function createProduct(product) {\n  console.log(\"createProduct\", product, PRODUCTS_URL);\n  return axios.post(PRODUCTS_URL, {\n    product: product\n  });\n} // READ\n\nexport function getAllProducts() {\n  console.log(\"PRODUCTS_URL\", PRODUCTS_URL);\n  return axios.get(PRODUCTS_URL);\n}\nexport function getProductById(productId) {\n  console.log(\"getProductById\", productId);\n  return axios.get(\"\".concat(PRODUCTS_URL, \"/\").concat(productId));\n} // Method from server should return QueryResultsModel(items: any[], totalsCount: number)\n// items => filtered/sorted result\n\nexport function findProducts(queryParams) {\n  console.log(\"findProducts\", queryParams);\n  return axios.post(\"\".concat(PRODUCTS_URL, \"/find\"), {\n    queryParams: queryParams\n  });\n} // UPDATE => PUT: update the procuct on the server\n\nexport function updateProduct(product) {\n  console.log(\"updateProduct\", product);\n  return axios.put(\"\".concat(PRODUCTS_URL, \"/\").concat(product.id), {\n    product: product\n  });\n} // UPDATE Status\n\nexport function updateStatusForProducts(ids, status) {\n  console.log(\"updateStatusForProducts\", ids, status);\n  return axios.post(\"\".concat(PRODUCTS_URL, \"/updateStatusForProducts\"), {\n    ids: ids,\n    status: status\n  });\n} // DELETE => delete the product from the server\n\nexport function deleteProduct(productId) {\n  console.log(\"deleteProduct\", productId);\n  return axios.delete(\"\".concat(PRODUCTS_URL, \"/\").concat(productId));\n} // DELETE Products by ids\n\nexport function deleteProducts(ids) {\n  return axios.post(\"\".concat(PRODUCTS_URL, \"/deleteProducts\"), {\n    ids: ids\n  });\n}","map":{"version":3,"sources":["/Users/itmac022/Documents/Sarang/PeerbitsDemo/src/app/modules/ECommerce/_redux/products/productsCrud.js"],"names":["axios","PRODUCTS_URL","createProduct","product","console","log","post","getAllProducts","get","getProductById","productId","findProducts","queryParams","updateProduct","put","id","updateStatusForProducts","ids","status","deleteProduct","delete","deleteProducts"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAMC,YAAY,GAAG,cAArB,C,CAEP;;AACA,OAAO,SAASC,aAAT,CAAuBC,OAAvB,EAAgC;AACrCC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,OAA7B,EAAsCF,YAAtC;AACA,SAAOD,KAAK,CAACM,IAAN,CAAWL,YAAX,EAAyB;AAAEE,IAAAA,OAAO,EAAPA;AAAF,GAAzB,CAAP;AACD,C,CAED;;AACA,OAAO,SAASI,cAAT,GAA0B;AAC/BH,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BJ,YAA5B;AACA,SAAOD,KAAK,CAACQ,GAAN,CAAUP,YAAV,CAAP;AACD;AAED,OAAO,SAASQ,cAAT,CAAwBC,SAAxB,EAAmC;AACxCN,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BK,SAA9B;AACA,SAAOV,KAAK,CAACQ,GAAN,WAAaP,YAAb,cAA6BS,SAA7B,EAAP;AACD,C,CAED;AACA;;AACA,OAAO,SAASC,YAAT,CAAsBC,WAAtB,EAAmC;AACxCR,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BO,WAA5B;AACA,SAAOZ,KAAK,CAACM,IAAN,WAAcL,YAAd,YAAmC;AAAEW,IAAAA,WAAW,EAAXA;AAAF,GAAnC,CAAP;AACD,C,CAED;;AACA,OAAO,SAASC,aAAT,CAAuBV,OAAvB,EAAgC;AACrCC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,OAA7B;AACA,SAAOH,KAAK,CAACc,GAAN,WAAab,YAAb,cAA6BE,OAAO,CAACY,EAArC,GAA2C;AAAEZ,IAAAA,OAAO,EAAPA;AAAF,GAA3C,CAAP;AACD,C,CAED;;AACA,OAAO,SAASa,uBAAT,CAAiCC,GAAjC,EAAsCC,MAAtC,EAA8C;AACnDd,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCY,GAAvC,EAA4CC,MAA5C;AACA,SAAOlB,KAAK,CAACM,IAAN,WAAcL,YAAd,+BAAsD;AAC3DgB,IAAAA,GAAG,EAAHA,GAD2D;AAE3DC,IAAAA,MAAM,EAANA;AAF2D,GAAtD,CAAP;AAID,C,CAED;;AACA,OAAO,SAASC,aAAT,CAAuBT,SAAvB,EAAkC;AACvCN,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BK,SAA7B;AACA,SAAOV,KAAK,CAACoB,MAAN,WAAgBnB,YAAhB,cAAgCS,SAAhC,EAAP;AACD,C,CAED;;AACA,OAAO,SAASW,cAAT,CAAwBJ,GAAxB,EAA6B;AAClC,SAAOjB,KAAK,CAACM,IAAN,WAAcL,YAAd,sBAA6C;AAAEgB,IAAAA,GAAG,EAAHA;AAAF,GAA7C,CAAP;AACD","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const PRODUCTS_URL = \"api/products\";\r\n\r\n// CREATE =>  POST: add a new product to the server\r\nexport function createProduct(product) {\r\n  console.log(\"createProduct\", product, PRODUCTS_URL);\r\n  return axios.post(PRODUCTS_URL, { product });\r\n}\r\n\r\n// READ\r\nexport function getAllProducts() {\r\n  console.log(\"PRODUCTS_URL\", PRODUCTS_URL);\r\n  return axios.get(PRODUCTS_URL);\r\n}\r\n\r\nexport function getProductById(productId) {\r\n  console.log(\"getProductById\", productId);\r\n  return axios.get(`${PRODUCTS_URL}/${productId}`);\r\n}\r\n\r\n// Method from server should return QueryResultsModel(items: any[], totalsCount: number)\r\n// items => filtered/sorted result\r\nexport function findProducts(queryParams) {\r\n  console.log(\"findProducts\", queryParams);\r\n  return axios.post(`${PRODUCTS_URL}/find`, { queryParams });\r\n}\r\n\r\n// UPDATE => PUT: update the procuct on the server\r\nexport function updateProduct(product) {\r\n  console.log(\"updateProduct\", product);\r\n  return axios.put(`${PRODUCTS_URL}/${product.id}`, { product });\r\n}\r\n\r\n// UPDATE Status\r\nexport function updateStatusForProducts(ids, status) {\r\n  console.log(\"updateStatusForProducts\", ids, status);\r\n  return axios.post(`${PRODUCTS_URL}/updateStatusForProducts`, {\r\n    ids,\r\n    status\r\n  });\r\n}\r\n\r\n// DELETE => delete the product from the server\r\nexport function deleteProduct(productId) {\r\n  console.log(\"deleteProduct\", productId);\r\n  return axios.delete(`${PRODUCTS_URL}/${productId}`);\r\n}\r\n\r\n// DELETE Products by ids\r\nexport function deleteProducts(ids) {\r\n  return axios.post(`${PRODUCTS_URL}/deleteProducts`, { ids });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}