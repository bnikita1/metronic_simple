{"ast":null,"code":"import _toConsumableArray from \"/Users/itmac022/Documents/Sarang/PeerbitsDemo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/itmac022/Documents/Sarang/PeerbitsDemo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { USER_REGISTERATION, USER_LOGIN, GET_CATEGORY, ADD_CATEGORY, UPDATE_CATEGORY, DELETE_CATEGORY } from \"../actionTypes\";\nimport { persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nvar initialAuthState = {\n  user: undefined,\n  authToken: undefined\n};\nvar reducer = persistReducer({\n  storage: storage,\n  key: \"v726-demo1-auth\",\n  whitelist: [\"authToken\"]\n}, function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialAuthState;\n\n  var _ref = arguments.length > 1 ? arguments[1] : undefined,\n      type = _ref.type,\n      payload = _ref.payload;\n\n  switch (type) {\n    case USER_REGISTERATION.USER_REGISTERATION_INIT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: true\n      });\n\n    case USER_REGISTERATION.USER_REGISTERATION_SUCCESS:\n      console.log(\"USER_REGISTERATION_SUCCESS\", payload);\n      return _objectSpread(_objectSpread({}, state), {}, {\n        authToken: payload.user.authToken,\n        user: payload.user,\n        loading: false\n      });\n\n    case USER_REGISTERATION.USER_REGISTERATION_ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: payload,\n        loading: false\n      });\n\n    case USER_LOGIN.USER_LOGIN_INIT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: true\n      });\n\n    case USER_LOGIN.USER_LOGIN_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        authToken: payload.user.authToken,\n        user: payload.user,\n        loading: false\n      });\n\n    case USER_LOGIN.USER_REGISTERATION_ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: payload,\n        loading: false\n      });\n\n    case GET_CATEGORY.GET_CATEGORY_INIT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: true\n      });\n\n    case GET_CATEGORY.GET_CATEGORY_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        categorylst: payload.categories,\n        loading: false\n      });\n\n    case GET_CATEGORY.GET_CATEGORY_ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: payload,\n        loading: false\n      });\n\n    case ADD_CATEGORY.ADD_CATEGORY_SUCCESS:\n      var cat = payload;\n      cat.id = Math.random();\n      var category = _toConsumableArray(state.categorylst) || [];\n      category.unshift(cat);\n      console.log(\"FINALE CATEGORY\", category);\n      return _objectSpread(_objectSpread({}, state), {}, {\n        categorylst: category,\n        loading: false\n      });\n\n    case UPDATE_CATEGORY.UPDATE_CATEGORY_SUCCESS:\n      var cats = payload; // cat.id = Math.random();\n\n      var categorys = _toConsumableArray(state.categorylst) || [];\n      categorys.map(function (item, index) {\n        if (item.id === payload.id) {\n          console.log(\"IDDD\", item.id);\n          item.category = payload.category;\n          item.description = payload.description;\n        }\n      });\n      return _objectSpread(_objectSpread({}, state), {}, {\n        categorylst: cats,\n        loading: false\n      });\n\n    case DELETE_CATEGORY.DELETE_CATEGORY_SUCCESS:\n      var categoryss = _toConsumableArray(state.categorylst) || [];\n      var catss = categoryss.filter(function (item) {\n        return item.id !== payload.categories.id;\n      });\n      return _objectSpread(_objectSpread({}, state), {}, {\n        categorylst: catss,\n        loading: false\n      });\n\n    default:\n      return state;\n  }\n});\nexport default reducer;","map":{"version":3,"sources":["/Users/itmac022/Documents/Sarang/PeerbitsDemo/src/reduxs/reducers/auth.js"],"names":["USER_REGISTERATION","USER_LOGIN","GET_CATEGORY","ADD_CATEGORY","UPDATE_CATEGORY","DELETE_CATEGORY","persistReducer","storage","initialAuthState","user","undefined","authToken","reducer","key","whitelist","state","type","payload","USER_REGISTERATION_INIT","loading","USER_REGISTERATION_SUCCESS","console","log","USER_REGISTERATION_ERROR","error","USER_LOGIN_INIT","USER_LOGIN_SUCCESS","GET_CATEGORY_INIT","GET_CATEGORY_SUCCESS","categorylst","categories","GET_CATEGORY_ERROR","ADD_CATEGORY_SUCCESS","cat","id","Math","random","category","unshift","UPDATE_CATEGORY_SUCCESS","cats","categorys","map","item","index","description","DELETE_CATEGORY_SUCCESS","categoryss","catss","filter"],"mappings":"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","sourcesContent":["import { USER_REGISTERATION, USER_LOGIN,GET_CATEGORY, ADD_CATEGORY, UPDATE_CATEGORY,DELETE_CATEGORY } from \"../actionTypes\";\nimport { persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nconst initialAuthState = {\n    user: undefined,\n    authToken: undefined,\n  };\n\nconst reducer = persistReducer(\n    { storage, key: \"v726-demo1-auth\", whitelist: [\"authToken\"] },\n    (state = initialAuthState, { type, payload }) => {\n        switch (type) {\n            case USER_REGISTERATION.USER_REGISTERATION_INIT:\n                return { ...state, loading: true };\n            case USER_REGISTERATION.USER_REGISTERATION_SUCCESS:\n                console.log(\"USER_REGISTERATION_SUCCESS\", payload);\n                return { ...state, authToken: payload.user.authToken, user: payload.user, loading: false };\n            case USER_REGISTERATION.USER_REGISTERATION_ERROR:\n                return { ...state, error: payload, loading: false };\n            \n            case USER_LOGIN.USER_LOGIN_INIT:\n                return { ...state, loading: true };\n\n            case USER_LOGIN.USER_LOGIN_SUCCESS:\n                return { ...state, authToken: payload.user.authToken, user: payload.user, loading: false };\n\n            case USER_LOGIN.USER_REGISTERATION_ERROR:\n                return { ...state, error: payload, loading: false };\n            \n            case GET_CATEGORY.GET_CATEGORY_INIT:\n                return { ...state, loading: true };\n    \n            case GET_CATEGORY.GET_CATEGORY_SUCCESS:\n                return { ...state, categorylst: payload.categories, loading: false };\n    \n            case GET_CATEGORY.GET_CATEGORY_ERROR:\n                return { ...state, error: payload, loading: false };\n\n            case ADD_CATEGORY.ADD_CATEGORY_SUCCESS:\n                const cat = payload;\n                cat.id = Math.random();\n                const category = [...state.categorylst] || [];\n                category.unshift(cat);\n                console.log(\"FINALE CATEGORY\", category);\n                return { ...state, categorylst: category, loading: false };\n\n            case UPDATE_CATEGORY.UPDATE_CATEGORY_SUCCESS:\n                const cats = payload;\n                // cat.id = Math.random();\n                const categorys = [...state.categorylst] || [];\n                categorys.map((item, index) => {\n                    if (item.id === payload.id) {\n                        console.log(\"IDDD\", item.id);\n                        item.category = payload.category\n                        item.description = payload.description\n                    }\n                });\n                return { ...state, categorylst: cats, loading: false };\n            \n            case DELETE_CATEGORY.DELETE_CATEGORY_SUCCESS:\n                const categoryss = [...state.categorylst] || [];\n                const catss = categoryss.filter((item) => item.id !== payload.categories.id);\n                return { ...state, categorylst: catss, loading: false };\n\n            default:\n                return state;\n            \n            \n        }\n    }\n);\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}