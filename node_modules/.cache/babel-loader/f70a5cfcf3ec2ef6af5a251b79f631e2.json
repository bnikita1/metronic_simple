{"ast":null,"code":"import _regeneratorRuntime from \"/Users/itmac022/Documents/Sarang/PeerbitsDemo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/itmac022/Documents/Sarang/PeerbitsDemo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React from 'react';\nimport { USER_LOGIN, USER_REGISTERATION } from '../actionTypes';\nimport axios from 'axios';\nexport var registerUser = function registerUser(payload) {\n  return function (dispatch) {\n    return dispatch(registerUserInit(payload));\n  };\n};\nexport var registerUserInit = function registerUserInit(payload) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dispatch({\n                type: USER_REGISTERATION.USER_REGISTERATION_INIT\n              });\n              console.log(\"PAYLOAD\", payload);\n              axios.post('http://localhost:9000/api/users', {\n                email: payload.email,\n                fullname: payload.fullname,\n                username: payload.username,\n                password: payload.password\n              }).then(function (res, err) {\n                if (err) {\n                  dispatch(registerUserError(err));\n                }\n\n                console.log(\"USER Registerd\", {\n                  res: res,\n                  err: err\n                });\n                dispatch(registerUserSuccess(res));\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var registerUserSuccess = function registerUserSuccess(userData) {\n  return function (dispatch) {\n    console.log(\"RESPONSE in DISPATCHS  \", userData.data);\n    dispatch({\n      type: USER_REGISTERATION.USER_REGISTERATION_SUCCESS,\n      payload: {\n        user: userData.data\n      }\n    });\n  };\n};\nexport var registerUserError = function registerUserError(err) {\n  return function (dispatch) {\n    dispatch({\n      type: USER_REGISTERATION.USER_REGISTERATION_ERROR,\n      payload: {\n        err: err\n      }\n    });\n  };\n};\nexport var loginUser = function loginUser(payload) {\n  return function (dispatch) {\n    return dispatch(loginUserInit(payload));\n  };\n};\nexport var loginUserInit = function loginUserInit(payload) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              dispatch({\n                type: USER_LOGIN.USER_LOGIN_INIT\n              });\n              console.log(\"PAYLOAD\", payload); //  axios.post('http://localhost:9000/api/users', { email: payload.email, fullname: payload.fullname, username: payload.username, password: payload.password }).then((res,err) => {\n\n              return _context2.abrupt(\"return\", axios.post('http://localhost:9000/api/users/login', {\n                email: payload.email,\n                password: payload.password\n              }).then(function (res, err) {\n                if (err) {\n                  dispatch(loginUserError(err));\n                }\n\n                console.log(\"USER Registerd\", {\n                  res: res,\n                  err: err\n                });\n                dispatch(loginUserSuccess(res));\n              }));\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\nexport var loginUserSuccess = function loginUserSuccess(userData) {\n  return function (dispatch) {\n    console.log(\"RESPONSE in DISPATCHS  \", userData.data);\n    dispatch({\n      type: USER_LOGIN.USER_LOGIN_SUCCESS,\n      payload: {\n        user: userData.data\n      }\n    });\n  };\n};\nexport var loginUserError = function loginUserError(err) {\n  return function (dispatch) {\n    dispatch({\n      type: USER_LOGIN.USER_LOGIN_ERROR,\n      payload: {\n        err: err\n      }\n    });\n  };\n};","map":{"version":3,"sources":["/Users/itmac022/Documents/Sarang/PeerbitsDemo/src/reduxs/actions/auth.js"],"names":["React","USER_LOGIN","USER_REGISTERATION","axios","registerUser","payload","dispatch","registerUserInit","type","USER_REGISTERATION_INIT","console","log","post","email","fullname","username","password","then","res","err","registerUserError","registerUserSuccess","userData","data","USER_REGISTERATION_SUCCESS","user","USER_REGISTERATION_ERROR","loginUser","loginUserInit","USER_LOGIN_INIT","loginUserError","loginUserSuccess","USER_LOGIN_SUCCESS","USER_LOGIN_ERROR"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { USER_LOGIN, USER_REGISTERATION } from '../actionTypes';\nimport axios from 'axios';\n\nexport const registerUser = (payload) => (dispatch) => dispatch(registerUserInit(payload));\n\nexport const registerUserInit = (payload)  => async (dispatch) => {\n    dispatch({\n        type: USER_REGISTERATION.USER_REGISTERATION_INIT\n    });\n    console.log(\"PAYLOAD\", payload);\n     axios.post('http://localhost:9000/api/users', { email: payload.email, fullname: payload.fullname, username: payload.username, password: payload.password }).then((res,err) => {\n        if (err)\n        {\n            dispatch(registerUserError(err));\n        }\n        console.log(\"USER Registerd\", { res, err });\n        dispatch(registerUserSuccess(res));\n    });\n}\n\n\nexport const registerUserSuccess = (userData) => (dispatch) => {\n    console.log(\"RESPONSE in DISPATCHS  \", userData.data);\n    dispatch({\n        type: USER_REGISTERATION.USER_REGISTERATION_SUCCESS,\n        payload: { user: userData.data }\n    });\n}\n\nexport const registerUserError = (err) => (dispatch) => {\n    dispatch({\n        type: USER_REGISTERATION.USER_REGISTERATION_ERROR,\n        payload: { err: err }\n    });\n\n}\n\n\nexport const loginUser = (payload) => (dispatch) => dispatch(loginUserInit(payload));\n\nexport const loginUserInit = (payload)  => async (dispatch) => {\n    dispatch({\n        type: USER_LOGIN.USER_LOGIN_INIT\n    });\n    console.log(\"PAYLOAD\", payload);\n    //  axios.post('http://localhost:9000/api/users', { email: payload.email, fullname: payload.fullname, username: payload.username, password: payload.password }).then((res,err) => {\n    return axios.post('http://localhost:9000/api/users/login' , { email:payload.email, password:payload.password }).then((res,err)=>{\n        if (err)\n        {\n            dispatch(loginUserError(err));\n        }\n        console.log(\"USER Registerd\", { res, err });\n        dispatch(loginUserSuccess(res));\n    });\n}\n\n\nexport const loginUserSuccess = (userData) => (dispatch) => {\n    console.log(\"RESPONSE in DISPATCHS  \", userData.data);\n    dispatch({\n        type: USER_LOGIN.USER_LOGIN_SUCCESS,\n        payload: { user: userData.data }\n    });\n}\n\nexport const loginUserError = (err) => (dispatch) => {\n    dispatch({\n        type: USER_LOGIN.USER_LOGIN_ERROR,\n        payload: { err: err }\n    });\n\n}"]},"metadata":{},"sourceType":"module"}