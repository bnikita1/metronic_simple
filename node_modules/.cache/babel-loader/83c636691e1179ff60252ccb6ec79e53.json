{"ast":null,"code":"import _objectSpread from \"/Users/itmac022/Documents/Sarang/PeerbitsDemo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { USER_REGISTERATION, USER_LOGIN, GET_CATEGORY } from \"../actionTypes\";\nimport { persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nvar initialAuthState = {\n  user: undefined,\n  authToken: undefined\n};\nvar reducer = persistReducer({\n  storage: storage,\n  key: \"v726-demo1-auth\",\n  whitelist: [\"authToken\"]\n}, function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialAuthState;\n\n  var _ref = arguments.length > 1 ? arguments[1] : undefined,\n      type = _ref.type,\n      payload = _ref.payload;\n\n  switch (type) {\n    case USER_REGISTERATION.USER_REGISTERATION_INIT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: true\n      });\n\n    case USER_REGISTERATION.USER_REGISTERATION_SUCCESS:\n      console.log(\"USER_REGISTERATION_SUCCESS\", payload);\n      return _objectSpread(_objectSpread({}, state), {}, {\n        authToken: payload.user.authToken,\n        user: payload.user,\n        loading: false\n      });\n\n    case USER_REGISTERATION.USER_REGISTERATION_ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: payload,\n        loading: false\n      });\n\n    case USER_LOGIN.USER_LOGIN_INIT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: true\n      });\n\n    case USER_LOGIN.USER_LOGIN_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        authToken: payload.user.authToken,\n        user: payload.user,\n        loading: false\n      });\n\n    case USER_LOGIN.USER_REGISTERATION_ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: payload,\n        loading: false\n      });\n\n    case GET_CATEGORY.GET_CATEGORY_INIT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: true\n      });\n\n    case GET_CATEGORY.GET_CATEGORY_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        categorylst: payload,\n        loading: false\n      });\n\n    case GET_CATEGORY.GET_CATEGORY_ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: payload,\n        loading: false\n      });\n\n    default:\n      return state;\n  }\n});\nexport default reducer;","map":{"version":3,"sources":["/Users/itmac022/Documents/Sarang/PeerbitsDemo/src/reduxs/reducers/auth.js"],"names":["USER_REGISTERATION","USER_LOGIN","GET_CATEGORY","persistReducer","storage","initialAuthState","user","undefined","authToken","reducer","key","whitelist","state","type","payload","USER_REGISTERATION_INIT","loading","USER_REGISTERATION_SUCCESS","console","log","USER_REGISTERATION_ERROR","error","USER_LOGIN_INIT","USER_LOGIN_SUCCESS","GET_CATEGORY_INIT","GET_CATEGORY_SUCCESS","categorylst","GET_CATEGORY_ERROR"],"mappings":";AAAA,SAASA,kBAAT,EAA6BC,UAA7B,EAAwCC,YAAxC,QAA4D,gBAA5D;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,IAAMC,gBAAgB,GAAG;AACrBC,EAAAA,IAAI,EAAEC,SADe;AAErBC,EAAAA,SAAS,EAAED;AAFU,CAAzB;AAKA,IAAME,OAAO,GAAGN,cAAc,CAC1B;AAAEC,EAAAA,OAAO,EAAPA,OAAF;AAAWM,EAAAA,GAAG,EAAE,iBAAhB;AAAmCC,EAAAA,SAAS,EAAE,CAAC,WAAD;AAA9C,CAD0B,EAE1B,YAAiD;AAAA,MAAhDC,KAAgD,uEAAxCP,gBAAwC;;AAAA;AAAA,MAApBQ,IAAoB,QAApBA,IAAoB;AAAA,MAAdC,OAAc,QAAdA,OAAc;;AAC7C,UAAQD,IAAR;AACI,SAAKb,kBAAkB,CAACe,uBAAxB;AACI,6CAAYH,KAAZ;AAAmBI,QAAAA,OAAO,EAAE;AAA5B;;AACJ,SAAKhB,kBAAkB,CAACiB,0BAAxB;AACIC,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CL,OAA1C;AACA,6CAAYF,KAAZ;AAAmBJ,QAAAA,SAAS,EAAEM,OAAO,CAACR,IAAR,CAAaE,SAA3C;AAAsDF,QAAAA,IAAI,EAAEQ,OAAO,CAACR,IAApE;AAA0EU,QAAAA,OAAO,EAAE;AAAnF;;AACJ,SAAKhB,kBAAkB,CAACoB,wBAAxB;AACI,6CAAYR,KAAZ;AAAmBS,QAAAA,KAAK,EAAEP,OAA1B;AAAmCE,QAAAA,OAAO,EAAE;AAA5C;;AAEJ,SAAKf,UAAU,CAACqB,eAAhB;AACI,6CAAYV,KAAZ;AAAmBI,QAAAA,OAAO,EAAE;AAA5B;;AAEJ,SAAKf,UAAU,CAACsB,kBAAhB;AACI,6CAAYX,KAAZ;AAAmBJ,QAAAA,SAAS,EAAEM,OAAO,CAACR,IAAR,CAAaE,SAA3C;AAAsDF,QAAAA,IAAI,EAAEQ,OAAO,CAACR,IAApE;AAA0EU,QAAAA,OAAO,EAAE;AAAnF;;AAEJ,SAAKf,UAAU,CAACmB,wBAAhB;AACI,6CAAYR,KAAZ;AAAmBS,QAAAA,KAAK,EAAEP,OAA1B;AAAmCE,QAAAA,OAAO,EAAE;AAA5C;;AAEJ,SAAKd,YAAY,CAACsB,iBAAlB;AACI,6CAAYZ,KAAZ;AAAmBI,QAAAA,OAAO,EAAE;AAA5B;;AAEJ,SAAKd,YAAY,CAACuB,oBAAlB;AACI,6CAAYb,KAAZ;AAAmBc,QAAAA,WAAW,EAAEZ,OAAhC;AAAyCE,QAAAA,OAAO,EAAE;AAAlD;;AAEJ,SAAKd,YAAY,CAACyB,kBAAlB;AACI,6CAAYf,KAAZ;AAAmBS,QAAAA,KAAK,EAAEP,OAA1B;AAAmCE,QAAAA,OAAO,EAAE;AAA5C;;AAGJ;AACI,aAAOJ,KAAP;AA7BR;AAiCH,CApCyB,CAA9B;AAuCA,eAAeH,OAAf","sourcesContent":["import { USER_REGISTERATION, USER_LOGIN,GET_CATEGORY } from \"../actionTypes\";\nimport { persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nconst initialAuthState = {\n    user: undefined,\n    authToken: undefined,\n  };\n\nconst reducer = persistReducer(\n    { storage, key: \"v726-demo1-auth\", whitelist: [\"authToken\"] },\n    (state = initialAuthState, { type, payload }) => {\n        switch (type) {\n            case USER_REGISTERATION.USER_REGISTERATION_INIT:\n                return { ...state, loading: true };\n            case USER_REGISTERATION.USER_REGISTERATION_SUCCESS:\n                console.log(\"USER_REGISTERATION_SUCCESS\", payload);\n                return { ...state, authToken: payload.user.authToken, user: payload.user, loading: false };\n            case USER_REGISTERATION.USER_REGISTERATION_ERROR:\n                return { ...state, error: payload, loading: false };\n            \n            case USER_LOGIN.USER_LOGIN_INIT:\n                return { ...state, loading: true };\n\n            case USER_LOGIN.USER_LOGIN_SUCCESS:\n                return { ...state, authToken: payload.user.authToken, user: payload.user, loading: false };\n\n            case USER_LOGIN.USER_REGISTERATION_ERROR:\n                return { ...state, error: payload, loading: false };\n            \n            case GET_CATEGORY.GET_CATEGORY_INIT:\n                return { ...state, loading: true };\n    \n            case GET_CATEGORY.GET_CATEGORY_SUCCESS:\n                return { ...state, categorylst: payload, loading: false };\n    \n            case GET_CATEGORY.GET_CATEGORY_ERROR:\n                return { ...state, error: payload, loading: false };\n\n            \n            default:\n                return state;\n            \n            \n        }\n    }\n);\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}