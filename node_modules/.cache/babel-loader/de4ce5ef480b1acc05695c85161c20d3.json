{"ast":null,"code":"import _slicedToArray from \"/Users/itmac022/Documents/Sarang/PeerbitsDemo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/itmac022/Documents/Sarang/PeerbitsDemo/src/app/modules/Auth/pages/Login.js\";\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { FormattedMessage, injectIntl } from \"react-intl\";\nimport * as auth from \"../_redux/authRedux\"; // import { login } from \"../_redux/authCrud\";\n\nimport { loginUser } from '../../../../reduxs/actions';\n/*\r\n  INTL (i18n) docs:\r\n  https://github.com/formatjs/react-intl/blob/master/docs/Components.md#formattedmessage\r\n*/\n\n/*\r\n  Formik+YUP:\r\n  https://jaredpalmer.com/formik/docs/tutorial#getfieldprops\r\n*/\n\nvar initialValues = {\n  email: \"admin@demo.com\",\n  password: \"demo\"\n};\n\nfunction Login(props) {\n  var intl = props.intl;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var dispacth = useDispatch();\n  var LoginSchema = Yup.object().shape({\n    email: Yup.string().email(\"Wrong email format\").min(3, \"Minimum 3 symbols\").max(50, \"Maximum 50 symbols\").required(intl.formatMessage({\n      id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\n    })),\n    password: Yup.string().min(3, \"Minimum 3 symbols\").max(50, \"Maximum 50 symbols\").required(intl.formatMessage({\n      id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\n    }))\n  });\n\n  var enableLoading = function enableLoading() {\n    setLoading(true);\n  };\n\n  var disableLoading = function disableLoading() {\n    setLoading(false);\n  };\n\n  var getInputClasses = function getInputClasses(fieldname) {\n    if (formik.touched[fieldname] && formik.errors[fieldname]) {\n      return \"is-invalid\";\n    }\n\n    if (formik.touched[fieldname] && !formik.errors[fieldname]) {\n      return \"is-valid\";\n    }\n\n    return \"\";\n  };\n\n  var formik = useFormik({\n    initialValues: initialValues,\n    validationSchema: LoginSchema,\n    onSubmit: function onSubmit(values, _ref) {\n      var setStatus = _ref.setStatus,\n          setSubmitting = _ref.setSubmitting;\n      enableLoading();\n      dispacth(loginUser({\n        email: values.email,\n        password: values.password\n      })); // setTimeout(() => {\n      //   login(values.email, values.password)\n      //     .then(({ data: { authToken } }) => {\n      //       console.log(\"innnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn\");\n      //       disableLoading();\n      //       props.login(authToken);\n      //     })\n      //     .catch(() => {\n      //       console.log(\"innnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnCCCCAAAATTCCHHH\");\n      //       setStatus(\n      //         intl.formatMessage({\n      //           id: \"AUTH.VALIDATION.INVALID_LOGIN\",\n      //         })\n      //       );\n      //     })\n      //     .finally(() => {\n      //       disableLoading();\n      //       setSubmitting(false);\n      //     });\n      // }, 1000);\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-form login-signin\",\n    id: \"kt_login_signin_form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center mb-10 mb-lg-20\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"font-size-h1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"AUTH.LOGIN.TITLE\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-muted font-weight-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, \"Enter your username and password\")), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: formik.handleSubmit,\n    className: \"form fv-plugins-bootstrap fv-plugins-framework\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, formik.status ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-10 alert alert-custom alert-light-danger alert-dismissible\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alert-text font-weight-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, formik.status)) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-10 alert alert-custom alert-light-info alert-dismissible\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alert-text \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, \"Use account \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 27\n    }\n  }, \"admin@demo.com\"), \" and password\", \" \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 15\n    }\n  }, \"demo\"), \" to continue.\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group fv-plugins-icon-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    placeholder: \"Email\",\n    type: \"email\",\n    className: \"form-control form-control-solid h-auto py-5 px-6 \".concat(getInputClasses(\"email\")),\n    name: \"email\"\n  }, formik.getFieldProps(\"email\"), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  })), formik.touched.email && formik.errors.email ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fv-plugins-message-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fv-help-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 15\n    }\n  }, formik.errors.email)) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group fv-plugins-icon-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    placeholder: \"Password\",\n    type: \"password\",\n    className: \"form-control form-control-solid h-auto py-5 px-6 \".concat(getInputClasses(\"password\")),\n    name: \"password\"\n  }, formik.getFieldProps(\"password\"), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  })), formik.touched.password && formik.errors.password ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fv-plugins-message-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fv-help-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 15\n    }\n  }, formik.errors.password)) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group d-flex flex-wrap justify-content-between align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/auth/forgot-password\",\n    className: \"text-dark-50 text-hover-primary my-3 mr-2\",\n    id: \"kt_login_forgot\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"AUTH.GENERAL.FORGOT_BUTTON\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"kt_login_signin_submit\",\n    type: \"submit\",\n    disabled: formik.isSubmitting,\n    className: \"btn btn-primary font-weight-bold px-9 py-4 my-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  }, \"Sign In\"), loading && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"ml-3 spinner spinner-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 25\n    }\n  })))));\n}\n\nexport default injectIntl(connect(null, auth.actions)(Login));","map":{"version":3,"sources":["/Users/itmac022/Documents/Sarang/PeerbitsDemo/src/app/modules/Auth/pages/Login.js"],"names":["React","useState","Link","useFormik","Yup","connect","useDispatch","FormattedMessage","injectIntl","auth","loginUser","initialValues","email","password","Login","props","intl","loading","setLoading","dispacth","LoginSchema","object","shape","string","min","max","required","formatMessage","id","enableLoading","disableLoading","getInputClasses","fieldname","formik","touched","errors","validationSchema","onSubmit","values","setStatus","setSubmitting","handleSubmit","status","getFieldProps","isSubmitting","actions"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { connect,useDispatch } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport * as auth from \"../_redux/authRedux\";\r\n// import { login } from \"../_redux/authCrud\";\r\nimport { loginUser } from '../../../../reduxs/actions';\r\n\r\n/*\r\n  INTL (i18n) docs:\r\n  https://github.com/formatjs/react-intl/blob/master/docs/Components.md#formattedmessage\r\n*/\r\n\r\n/*\r\n  Formik+YUP:\r\n  https://jaredpalmer.com/formik/docs/tutorial#getfieldprops\r\n*/\r\n\r\nconst initialValues = {\r\n  email: \"admin@demo.com\",\r\n  password: \"demo\",\r\n};\r\n\r\nfunction Login(props) {\r\n  const { intl } = props;\r\n  const [loading, setLoading] = useState(false);\r\n  const dispacth = useDispatch();\r\n  const LoginSchema = Yup.object().shape({\r\n    email: Yup.string()\r\n      .email(\"Wrong email format\")\r\n      .min(3, \"Minimum 3 symbols\")\r\n      .max(50, \"Maximum 50 symbols\")\r\n      .required(\r\n        intl.formatMessage({\r\n          id: \"AUTH.VALIDATION.REQUIRED_FIELD\",\r\n        })\r\n      ),\r\n    password: Yup.string()\r\n      .min(3, \"Minimum 3 symbols\")\r\n      .max(50, \"Maximum 50 symbols\")\r\n      .required(\r\n        intl.formatMessage({\r\n          id: \"AUTH.VALIDATION.REQUIRED_FIELD\",\r\n        })\r\n      ),\r\n  });\r\n\r\n  const enableLoading = () => {\r\n    setLoading(true);\r\n  };\r\n\r\n  const disableLoading = () => {\r\n    setLoading(false);\r\n  };\r\n\r\n  const getInputClasses = (fieldname) => {\r\n    if (formik.touched[fieldname] && formik.errors[fieldname]) {\r\n      return \"is-invalid\";\r\n    }\r\n\r\n    if (formik.touched[fieldname] && !formik.errors[fieldname]) {\r\n      return \"is-valid\";\r\n    }\r\n\r\n    return \"\";\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema: LoginSchema,\r\n    onSubmit: (values, { setStatus, setSubmitting }) => {\r\n      enableLoading();\r\n\r\n      dispacth(loginUser({ email: values.email, password: values.password }));\r\n      // setTimeout(() => {\r\n      //   login(values.email, values.password)\r\n      //     .then(({ data: { authToken } }) => {\r\n      //       console.log(\"innnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn\");\r\n      //       disableLoading();\r\n\r\n      //       props.login(authToken);\r\n      //     })\r\n      //     .catch(() => {\r\n      //       console.log(\"innnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnCCCCAAAATTCCHHH\");\r\n      //       setStatus(\r\n      //         intl.formatMessage({\r\n      //           id: \"AUTH.VALIDATION.INVALID_LOGIN\",\r\n      //         })\r\n      //       );\r\n      //     })\r\n      //     .finally(() => {\r\n      //       disableLoading();\r\n      //       setSubmitting(false);\r\n      //     });\r\n      // }, 1000);\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div className=\"login-form login-signin\" id=\"kt_login_signin_form\">\r\n      {/* begin::Head */}\r\n      <div className=\"text-center mb-10 mb-lg-20\">\r\n        <h3 className=\"font-size-h1\">\r\n          <FormattedMessage id=\"AUTH.LOGIN.TITLE\" />\r\n        </h3>\r\n        <p className=\"text-muted font-weight-bold\">\r\n          Enter your username and password\r\n        </p>\r\n      </div>\r\n      {/* end::Head */}\r\n\r\n      {/*begin::Form*/}\r\n      <form\r\n        onSubmit={formik.handleSubmit}\r\n        className=\"form fv-plugins-bootstrap fv-plugins-framework\"\r\n      >\r\n        {formik.status ? (\r\n          <div className=\"mb-10 alert alert-custom alert-light-danger alert-dismissible\">\r\n            <div className=\"alert-text font-weight-bold\">{formik.status}</div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"mb-10 alert alert-custom alert-light-info alert-dismissible\">\r\n            <div className=\"alert-text \">\r\n              Use account <strong>admin@demo.com</strong> and password{\" \"}\r\n              <strong>demo</strong> to continue.\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"form-group fv-plugins-icon-container\">\r\n          <input\r\n            placeholder=\"Email\"\r\n            type=\"email\"\r\n            className={`form-control form-control-solid h-auto py-5 px-6 ${getInputClasses(\r\n              \"email\"\r\n            )}`}\r\n            name=\"email\"\r\n            {...formik.getFieldProps(\"email\")}\r\n          />\r\n          {formik.touched.email && formik.errors.email ? (\r\n            <div className=\"fv-plugins-message-container\">\r\n              <div className=\"fv-help-block\">{formik.errors.email}</div>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n        <div className=\"form-group fv-plugins-icon-container\">\r\n          <input\r\n            placeholder=\"Password\"\r\n            type=\"password\"\r\n            className={`form-control form-control-solid h-auto py-5 px-6 ${getInputClasses(\r\n              \"password\"\r\n            )}`}\r\n            name=\"password\"\r\n            {...formik.getFieldProps(\"password\")}\r\n          />\r\n          {formik.touched.password && formik.errors.password ? (\r\n            <div className=\"fv-plugins-message-container\">\r\n              <div className=\"fv-help-block\">{formik.errors.password}</div>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n        <div className=\"form-group d-flex flex-wrap justify-content-between align-items-center\">\r\n          <Link\r\n            to=\"/auth/forgot-password\"\r\n            className=\"text-dark-50 text-hover-primary my-3 mr-2\"\r\n            id=\"kt_login_forgot\"\r\n          >\r\n            <FormattedMessage id=\"AUTH.GENERAL.FORGOT_BUTTON\" />\r\n          </Link>\r\n          <button\r\n            id=\"kt_login_signin_submit\"\r\n            type=\"submit\"\r\n            disabled={formik.isSubmitting}\r\n            className={`btn btn-primary font-weight-bold px-9 py-4 my-3`}\r\n          >\r\n            <span>Sign In</span>\r\n            {loading && <span className=\"ml-3 spinner spinner-white\"></span>}\r\n          </button>\r\n        </div>\r\n      </form>\r\n      {/*end::Form*/}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, auth.actions)(Login));\r\n"]},"metadata":{},"sourceType":"module"}