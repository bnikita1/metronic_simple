{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/itmac022/Documents/Sarang/PeerbitsDemo/src/app/modules/Demo/Category.js\";\n\nimport React, { useEffect, useMemo } from 'react';\nimport { Card, CardBody, CardHeader, CardHeaderToolbar } from \"../../../_metronic/_partials/controls\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getCategories } from '../../../reduxs/actions';\nimport { ProductsFilter } from \"./products-filter/ProductsFilter\";\nimport { ProductsTable } from \"./products-table/ProductsTable\";\nimport { ProductsGrouping } from \"./products-grouping/ProductsGrouping\";\nimport { useProductsUIContext } from \"../ECommerce/pages/products/ProductsUIContext\";\n\nvar Category = function Category(props) {\n  var dispatch = useDispatch();\n  var categories = useSelector(function (_ref) {\n    var auth = _ref.auth;\n    return {\n      categories: auth.categorylst\n    };\n  });\n  useEffect(function () {\n    dispatch(getCategories());\n    console.log(\"object\", categories);\n  }, []);\n  useEffect(function () {\n    // dispatch(getCategories());\n    console.log(\"object\", categories);\n  }, [categories]);\n  var productsUIContext = useProductsUIContext();\n  var productsUIProps = useMemo(function () {\n    return {\n      ids: productsUIContext.ids,\n      queryParams: productsUIContext.queryParams,\n      setQueryParams: productsUIContext.setQueryParams,\n      newProductButtonClick: productsUIContext.newProductButtonClick,\n      openDeleteProductsDialog: productsUIContext.openDeleteProductsDialog,\n      openEditProductPage: productsUIContext.openEditProductPage,\n      openUpdateProductsStatusDialog: productsUIContext.openUpdateProductsStatusDialog,\n      openFetchProductsDialog: productsUIContext.openFetchProductsDialog\n    };\n  }, [productsUIContext]);\n  return /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    title: \"Category List\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardHeaderToolbar, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\" //   onClick={productsUIProps.newProductButtonClick}\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, \"New Category\"))), /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default Category;","map":{"version":3,"sources":["/Users/itmac022/Documents/Sarang/PeerbitsDemo/src/app/modules/Demo/Category.js"],"names":["React","useEffect","useMemo","Card","CardBody","CardHeader","CardHeaderToolbar","useDispatch","useSelector","getCategories","ProductsFilter","ProductsTable","ProductsGrouping","useProductsUIContext","Category","props","dispatch","categories","auth","categorylst","console","log","productsUIContext","productsUIProps","ids","queryParams","setQueryParams","newProductButtonClick","openDeleteProductsDialog","openEditProductPage","openUpdateProductsStatusDialog","openFetchProductsDialog"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA0BC,OAA1B,QAAyC,OAAzC;AACA,SACIC,IADJ,EAEIC,QAFJ,EAGIC,UAHJ,EAIIC,iBAJJ,QAKO,uCALP;AAMA,SAASC,WAAT,EAAqBC,WAArB,QAAwC,aAAxC;AACA,SAASC,aAAT,QAA8B,yBAA9B;AAEA,SAASC,cAAT,QAA+B,kCAA/B;AACA,SAASC,aAAT,QAA8B,gCAA9B;AACA,SAASC,gBAAT,QAAiC,sCAAjC;AACA,SAASC,oBAAT,QAAqC,+CAArC;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AAExB,MAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,MAAMU,UAAU,GAAGT,WAAW,CAC1B;AAAA,QAAGU,IAAH,QAAGA,IAAH;AAAA,WAAa;AACTD,MAAAA,UAAU,EAACC,IAAI,CAACC;AADP,KAAb;AAAA,GAD0B,CAA9B;AAKAlB,EAAAA,SAAS,CAAC,YAAM;AACZe,IAAAA,QAAQ,CAACP,aAAa,EAAd,CAAR;AACAW,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBJ,UAArB;AACF,GAHO,EAGN,EAHM,CAAT;AAKAhB,EAAAA,SAAS,CAAC,YAAM;AACZ;AACAmB,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBJ,UAAtB;AACH,GAHQ,EAGN,CAACA,UAAD,CAHM,CAAT;AAKA,MAAMK,iBAAiB,GAAGT,oBAAoB,EAA9C;AACA,MAAMU,eAAe,GAAGrB,OAAO,CAAC,YAAM;AACpC,WAAO;AACLsB,MAAAA,GAAG,EAAEF,iBAAiB,CAACE,GADlB;AAELC,MAAAA,WAAW,EAAEH,iBAAiB,CAACG,WAF1B;AAGLC,MAAAA,cAAc,EAAEJ,iBAAiB,CAACI,cAH7B;AAILC,MAAAA,qBAAqB,EAAEL,iBAAiB,CAACK,qBAJpC;AAKLC,MAAAA,wBAAwB,EAAEN,iBAAiB,CAACM,wBALvC;AAMLC,MAAAA,mBAAmB,EAAEP,iBAAiB,CAACO,mBANlC;AAOLC,MAAAA,8BAA8B,EAC5BR,iBAAiB,CAACQ,8BARf;AASLC,MAAAA,uBAAuB,EAAET,iBAAiB,CAACS;AATtC,KAAP;AAWD,GAZ8B,EAY5B,CAACT,iBAAD,CAZ4B,CAA/B;AAaA,sBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,eAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,iBAFZ,CAGA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF,CADA,eAYA,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZA,CADJ;AAwBH,CAxDD;;AA0DA,eAAeR,QAAf","sourcesContent":["import React, { useEffect,useMemo } from 'react'\nimport {\n    Card,\n    CardBody,\n    CardHeader,\n    CardHeaderToolbar,\n} from \"../../../_metronic/_partials/controls\";\nimport { useDispatch,useSelector } from 'react-redux';\nimport { getCategories } from '../../../reduxs/actions';\n\nimport { ProductsFilter } from \"./products-filter/ProductsFilter\";\nimport { ProductsTable } from \"./products-table/ProductsTable\";\nimport { ProductsGrouping } from \"./products-grouping/ProductsGrouping\";\nimport { useProductsUIContext } from \"../ECommerce/pages/products/ProductsUIContext\";\n\nconst Category = (props) => {\n    \n    const dispatch = useDispatch();\n    const categories = useSelector(\n        ({ auth})=> ({\n            categories:auth.categorylst\n    })\n    )\n    useEffect(() => {\n        dispatch(getCategories());\n        console.log(\"object\",categories)\n     },[])\n    \n    useEffect(() => {\n        // dispatch(getCategories());\n        console.log(\"object\", categories)\n    }, [categories]);\n\n    const productsUIContext = useProductsUIContext();\n    const productsUIProps = useMemo(() => {\n      return {\n        ids: productsUIContext.ids,\n        queryParams: productsUIContext.queryParams,\n        setQueryParams: productsUIContext.setQueryParams,\n        newProductButtonClick: productsUIContext.newProductButtonClick,\n        openDeleteProductsDialog: productsUIContext.openDeleteProductsDialog,\n        openEditProductPage: productsUIContext.openEditProductPage,\n        openUpdateProductsStatusDialog:\n          productsUIContext.openUpdateProductsStatusDialog,\n        openFetchProductsDialog: productsUIContext.openFetchProductsDialog,\n      };\n    }, [productsUIContext]);\n    return (\n        <Card>\n        <CardHeader title=\"Category List\">\n          <CardHeaderToolbar>\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n            //   onClick={productsUIProps.newProductButtonClick}\n            >\n              New Category\n            </button>\n          </CardHeaderToolbar>\n        </CardHeader>\n        <CardBody>\n          {/* <ProductsFilter />\n          {productsUIProps.ids.length > 0 && (\n            <>\n              <ProductsGrouping />\n            </>\n          )}\n          <ProductsTable /> */}\n        </CardBody>\n      </Card>    )\n\n}\n\nexport default Category;"]},"metadata":{},"sourceType":"module"}