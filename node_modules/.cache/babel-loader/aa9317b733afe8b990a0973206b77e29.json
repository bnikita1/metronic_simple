{"ast":null,"code":"import _regeneratorRuntime from \"/Users/itmac022/Documents/Sarang/PeerbitsDemo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/itmac022/Documents/Sarang/PeerbitsDemo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React from 'react';\nimport { USER_REGISTERATION } from '../actionTypes';\nimport axios from 'axios';\nexport var registerUser = function registerUser(payload) {\n  return function (dispatch) {\n    return dispatch(registerUserInit(payload));\n  };\n};\nexport var registerUserInit = function registerUserInit(payload) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var userData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dispatch({\n                type: USER_REGISTERATION.USER_REGISTERATION_INIT\n              });\n              console.log(\"PAYLOAD\", payload);\n              _context.next = 4;\n              return axios.post('http://localhost:9000/api/users', {\n                email: payload.email,\n                fullname: payload.fullname,\n                username: payload.username,\n                password: payload.password\n              });\n\n            case 4:\n              userData = _context.sent;\n              console.log(\"USER Registerd\", userData); // return userData;\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var registerUserSuccess = function registerUserSuccess(userData) {\n  return function (dispatch) {\n    dispatch({\n      type: USER_REGISTERATION.USER_REGISTERATION_SUCCESS,\n      payload: {\n        authToken: userData.data.authToken\n      }\n    });\n  };\n};","map":{"version":3,"sources":["/Users/itmac022/Documents/Sarang/PeerbitsDemo/src/reduxs/actions/auth.js"],"names":["React","USER_REGISTERATION","axios","registerUser","payload","dispatch","registerUserInit","type","USER_REGISTERATION_INIT","console","log","post","email","fullname","username","password","userData","registerUserSuccess","USER_REGISTERATION_SUCCESS","authToken","data"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,kBAAT,QAAmC,gBAAnC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,OAAD;AAAA,SAAa,UAACC,QAAD;AAAA,WAAcA,QAAQ,CAACC,gBAAgB,CAACF,OAAD,CAAjB,CAAtB;AAAA,GAAb;AAAA,CAArB;AAEP,OAAO,IAAME,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACF,OAAD;AAAA;AAAA,wEAAc,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAC1CA,cAAAA,QAAQ,CAAC;AACLE,gBAAAA,IAAI,EAAEN,kBAAkB,CAACO;AADpB,eAAD,CAAR;AAGAC,cAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBN,OAAvB;AAJ0C;AAAA,qBAKnBF,KAAK,CAACS,IAAN,CAAW,iCAAX,EAA8C;AAAEC,gBAAAA,KAAK,EAAER,OAAO,CAACQ,KAAjB;AAAwBC,gBAAAA,QAAQ,EAAET,OAAO,CAACS,QAA1C;AAAoDC,gBAAAA,QAAQ,EAAEV,OAAO,CAACU,QAAtE;AAAgFC,gBAAAA,QAAQ,EAAEX,OAAO,CAACW;AAAlG,eAA9C,CALmB;;AAAA;AAKpCC,cAAAA,QALoC;AAM1CP,cAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BM,QAA9B,EAN0C,CAS1C;;AAT0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAd;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAzB;AAcP,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACD,QAAD;AAAA,SAAc,UAACX,QAAD,EAAc;AAC3DA,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEN,kBAAkB,CAACiB,0BADpB;AAELd,MAAAA,OAAO,EAAE;AAAEe,QAAAA,SAAS,EAAEH,QAAQ,CAACI,IAAT,CAAcD;AAA3B;AAFJ,KAAD,CAAR;AAKH,GANkC;AAAA,CAA5B","sourcesContent":["import React from 'react'\nimport { USER_REGISTERATION } from '../actionTypes';\nimport axios from 'axios';\n\nexport const registerUser = (payload) => (dispatch) => dispatch(registerUserInit(payload));\n\nexport const registerUserInit = (payload)  => async (dispatch) => {\n    dispatch({\n        type: USER_REGISTERATION.USER_REGISTERATION_INIT\n    });\n    console.log(\"PAYLOAD\", payload);\n    const userData = await axios.post('http://localhost:9000/api/users', { email: payload.email, fullname: payload.fullname, username: payload.username, password: payload.password });\n    console.log(\"USER Registerd\", userData);\n\n\n    // return userData;\n\n}\n\n\nexport const registerUserSuccess = (userData) => (dispatch) => {\n    dispatch({\n        type: USER_REGISTERATION.USER_REGISTERATION_SUCCESS,\n        payload: { authToken: userData.data.authToken }\n    });\n\n}"]},"metadata":{},"sourceType":"module"}